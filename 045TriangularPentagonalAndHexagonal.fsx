(*
    Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

    Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
    Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
    Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
    It can be verified that T285 = P165 = H143 = 40755.

    Find the next triangle number that is also pentagonal and hexagonal.
*)

let isInteger x = x - float (int64 x) = 0.0

let isPentagon x = isInteger ((1.0 + sqrt (1.0 + 24.0 * float  x)) / 6.0)

let isHexagonal x = isInteger ((sqrt(8.0*float x+1.0) + 1.0) / 4.0)

let toTriangleNumber x =  x *(x + 1L) / 2L

Seq.initInfinite (int64 >> toTriangleNumber)
|> Seq.skip 287
|> Seq.find ( fun n -> isPentagon n && isHexagonal n)

